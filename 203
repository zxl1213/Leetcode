/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeElements(struct ListNode* head, int val) {
    struct ListNode* c=head;
    struct ListNode* tail=NULL;
    struct ListNode* result=NULL;
    while(c!=NULL){
        if(c->val!=val){
        if(tail==NULL){
          result=tail=c;    
        }else{
        tail->next=c;
        tail=c;
        }
      }
      c=c->next;
    }if(tail!=NULL){
    tail->next=NULL;
    }
    return result;
}
////////////////////////////
void SListRemoveALL(SList *s,SlistDataType v){

    if(s->first==NULL){

    return;

}

    Node* c=s->first;

  	while(c->next!=NULL){

	  if(c->next->value==v){

	    Node* next=c->next;

		c->next=c->next->next;

		free(next);

	  }

	  c=c->next;

	}

	if(s->first->value=v){

	  Node* first=s->first;//存下要删的结点的位置

	  s->first=s->first->next;//改变结点指向

	  free(first);//删除结点

	}

}
